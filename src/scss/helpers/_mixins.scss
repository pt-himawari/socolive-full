/*******************************************
  MIXINS
  assets/styles/scss/helpers/_mixins.scss
*******************************************/


/*********************
TRANSITION
*********************/

/* @include transition(all 0.2s ease-in-out); */
@mixin transition($transition...) {
    // defining prefixes so we can use them in mixins below
    $prefixes:      ("-webkit-", "" );
    @each $prefix in $prefixes {
      #{$prefix}transition: $transition;
    }
  }
  
  
  
  
  @mixin quantity-query( $number, $comparison: 'equal' ) {
    $nth: '';
    
    @if index( ('greater' 'more' '>'), $comparison ) {
      $nth: 'n + #{$number}';
    } @else if index( ('less' 'fewer' '<'), $comparison ) {
      $nth: '-n + #{$number}';
    } @else if index( ('equal' 'same' '='), $comparison ) {
      $nth: $number;
    } @else {
      @warn "Sorry, that's an invalid $comparison value."
    }
    
    &:nth-last-child(#{$nth}):first-child {
      &,
      & ~ * {
        @content;
      }
    }
  }
  
  
  @mixin qq-equal( $number ) {
    @include quantity-query( $number, equal ) {
      @content;
    }
  }
  
  @mixin qq-greater( $number ) {
    @include quantity-query( $number, greater ) {
      @content;
    }
  }
  
  @mixin qq-less( $number ) {
    @include quantity-query( $number, less ) {
      @content;
    }
  }
  
  
  
  
  
  /************************
  
        BREAKPOINT MIXINS
  
        Example 
  
        .site-header {
            padding: 2rem;
            font-size: 1.8rem;
            @include mq('tablet-wide') {
                padding-top: 4rem;
                font-size: 2.4rem;
            }
        }
  
  *************************/
  
  @mixin mq($width, $type: min) {
      @if map_has_key($breakpoints, $width) {
          $width: map_get($breakpoints, $width);
          @if $type == max {
              $width: $width - 1px;
          }
          @media only screen and (#{$type}-width: $width) {
              @content;
          }
      }
      @else {
        @media only screen and (#{$type}-width: $width) {
              @content;
        }
      }
  }
  
  
  // used for vertical breakpoints, must pass size
  @mixin mqh($width, $type: min) {
      @media only screen and (#{$type}-height: $width) {
            @content;
      }
  }
  
  
  @mixin t() {
    @include mq('tablet') {
      @content;
    }
  }
  @mixin d() {
    @include mq('desktop') {
      @content;
    }
  }
  @mixin dw() {
    @include mq('desktop-wide') {
      @content;
    }
  }
  
  
  
  
  /************************
        
        CLEARFIX
  
        Example
  
        .container-with-floated-children {
          @extend %clearfix;
        }
  
        @extend %nowiggle
  
  *************************/
  
  %clearfix {
    *zoom: 1;
    &:before, &:after {
      content: " ";
      display: table;
    }
    &:after {
      clear: both;
    }
  }
  
  
  
  
  
  /************************
        
        HARDWARE
  
        Simple and effective for when you need to trigger hardware acceleration 
        for some animation, keeping everything fast, slick and flicker-free.
  
  *************************/
  
  @mixin hardware($backface: true, $perspective: 1000) {
      @if $backface {
          backface-visibility: hidden;
      }
      perspective: $perspective;
  }
  
  
  %nowiggle {
    -webkit-backface-visibility: hidden;
  }